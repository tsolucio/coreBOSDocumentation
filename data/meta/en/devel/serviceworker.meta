a:2:{s:7:"current";a:9:{s:4:"date";a:2:{s:7:"created";i:1583088435;s:8:"modified";i:1583088606;}s:7:"creator";s:10:"Joe Bordes";s:4:"user";s:9:"joebordes";s:11:"last_change";a:8:{s:4:"date";i:1583088606;s:2:"ip";s:14:"185.191.88.212";s:4:"type";s:1:"E";s:2:"id";s:22:"en:devel:serviceworker";s:4:"user";s:9:"joebordes";s:3:"sum";s:26:"[Things you need to know] ";s:5:"extra";s:0:"";s:10:"sizechange";i:4;}s:5:"title";s:22:"coreBOS Service Worker";s:11:"description";a:2:{s:15:"tableofcontents";a:2:{i:0;a:4:{s:3:"hid";s:22:"corebos_service_worker";s:5:"title";s:22:"coreBOS Service Worker";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:1;a:4:{s:3:"hid";s:23:"things_you_need_to_know";s:5:"title";s:23:"Things you need to know";s:4:"type";s:2:"ul";s:5:"level";i:1;}}s:8:"abstract";s:503:"coreBOS Service Worker

As of the moment of the creation of this page, we are using version 5.0.0 of Google's Service Worker Workbox functionality in order to permanently cache all the files we can on the client's computer. It is not a full-blown offline service worker as coreBOS depends too much on the backend to work offline. We use it to cache all the elements that we know will not change so that they can be read directly from the user's computer. In this way, we reduce the load on the serverâ€¦";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}s:11:"contributor";a:1:{s:9:"joebordes";s:10:"Joe Bordes";}}s:10:"persistent";a:5:{s:4:"date";a:2:{s:7:"created";i:1583088435;s:8:"modified";i:1583088606;}s:7:"creator";s:10:"Joe Bordes";s:4:"user";s:9:"joebordes";s:11:"last_change";a:8:{s:4:"date";i:1583088606;s:2:"ip";s:14:"185.191.88.212";s:4:"type";s:1:"E";s:2:"id";s:22:"en:devel:serviceworker";s:4:"user";s:9:"joebordes";s:3:"sum";s:26:"[Things you need to know] ";s:5:"extra";s:0:"";s:10:"sizechange";i:4;}s:11:"contributor";a:1:{s:9:"joebordes";s:10:"Joe Bordes";}}}